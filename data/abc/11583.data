# dmidecode 3.2
Getting SMBIOS data from sysfs.
SMBIOS 2.7 present.
620 structures occupying 29060 bytes.
Table at 0x000E0010.

Handle 0x0000, DMI type 0, 24 bytes
BIOS Information
	Vendor: Phoenix Technologies LTD
	Version: 6.00
	Release Date: 05/19/2017
	Address: 0xEA520
	Runtime Size: 88800 bytes
	ROM Size: 64 kB
	Characteristics:
		ISA is supported
		PCI is supported
		PC Card (PCMCIA) is supported
		PNP is supported
		APM is supported
		BIOS is upgradeable
		BIOS shadowing is allowed
		ESCD support is available
		Boot from CD is supported
		Selectable boot is supported
		EDD is supported
		Print screen service is supported (int 5h)
		8042 keyboard services are supported (int 9h)
		Serial services are supported (int 14h)
		Printer services are supported (int 17h)
		CGA/mono video services are supported (int 10h)
		ACPI is supported
		Smart battery is supported
		BIOS boot specification is supported
		Function key-initiated network boot is supported
		Targeted content distribution is supported
	BIOS Revision: 4.6
	Firmware Revision: 0.0

Handle 0x0001, DMI type 1, 27 bytes
System Information
	Manufacturer: VMware, Inc.
	Product Name: VMware Virtual Platform
	Version: None
	Serial Number: VMware-56 4d 01 00 e4 32 50 3d-59 86 4d 12 91 ad 50 5e
	UUID: 00014d56-32e4-3d50-5986-4d1291ad505e
	Wake-up Type: Power Switch
	SKU Number: Not Specified
	Family: Not Specified

Handle 0x0002, DMI type 2, 15 bytes
Base Board Information
	Manufacturer: Intel Corporation
	Product Name: 440BX Desktop Reference Platform
	Version: None
	Serial Number: None
	Asset Tag: Not Specified
	Features: None
	Location In Chassis: Not Specified
	Chassis Handle: 0x0000
	Type: Unknown
	Contained Object Handles: 0

Handle 0x0003, DMI type 3, 21 bytes
Chassis Information
	Manufacturer: No Enclosure
	Type: Other
	Lock: Not Present
	Version: N/A
	Serial Number: None
	Asset Tag: No Asset Tag
	Boot-up State: Safe
	Power Supply State: Safe
	Thermal State: Safe
	Security Status: None
	OEM Information: 0x00001234
	Height: Unspecified
	Number Of Power Cords: Unspecified
	Contained Elements: 0

Handle 0x0004, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #000
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 09 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Enabled
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0094
	L2 Cache Handle: 0x0114
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0005, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #001
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0095
	L2 Cache Handle: 0x0115
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0006, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #002
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0096
	L2 Cache Handle: 0x0116
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0007, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #003
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0097
	L2 Cache Handle: 0x0117
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0008, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #004
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0098
	L2 Cache Handle: 0x0118
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0009, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #005
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0099
	L2 Cache Handle: 0x0119
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x000A, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #006
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x009A
	L2 Cache Handle: 0x011A
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x000B, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #007
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x009B
	L2 Cache Handle: 0x011B
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x000C, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #008
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x009C
	L2 Cache Handle: 0x011C
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x000D, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #009
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x009D
	L2 Cache Handle: 0x011D
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x000E, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #010
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x009E
	L2 Cache Handle: 0x011E
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x000F, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #011
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x009F
	L2 Cache Handle: 0x011F
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0010, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #012
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00A0
	L2 Cache Handle: 0x0120
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0011, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #013
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00A1
	L2 Cache Handle: 0x0121
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0012, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #014
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00A2
	L2 Cache Handle: 0x0122
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0013, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #015
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00A3
	L2 Cache Handle: 0x0123
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0014, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #016
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00A4
	L2 Cache Handle: 0x0124
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0015, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #017
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00A5
	L2 Cache Handle: 0x0125
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0016, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #018
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00A6
	L2 Cache Handle: 0x0126
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0017, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #019
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00A7
	L2 Cache Handle: 0x0127
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0018, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #020
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00A8
	L2 Cache Handle: 0x0128
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0019, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #021
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00A9
	L2 Cache Handle: 0x0129
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x001A, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #022
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00AA
	L2 Cache Handle: 0x012A
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x001B, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #023
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00AB
	L2 Cache Handle: 0x012B
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x001C, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #024
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00AC
	L2 Cache Handle: 0x012C
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x001D, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #025
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00AD
	L2 Cache Handle: 0x012D
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x001E, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #026
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00AE
	L2 Cache Handle: 0x012E
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x001F, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #027
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00AF
	L2 Cache Handle: 0x012F
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0020, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #028
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00B0
	L2 Cache Handle: 0x0130
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0021, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #029
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00B1
	L2 Cache Handle: 0x0131
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0022, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #030
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00B2
	L2 Cache Handle: 0x0132
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0023, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #031
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00B3
	L2 Cache Handle: 0x0133
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0024, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #032
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00B4
	L2 Cache Handle: 0x0134
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0025, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #033
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00B5
	L2 Cache Handle: 0x0135
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0026, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #034
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00B6
	L2 Cache Handle: 0x0136
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0027, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #035
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00B7
	L2 Cache Handle: 0x0137
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0028, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #036
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00B8
	L2 Cache Handle: 0x0138
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0029, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #037
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00B9
	L2 Cache Handle: 0x0139
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x002A, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #038
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00BA
	L2 Cache Handle: 0x013A
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x002B, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #039
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00BB
	L2 Cache Handle: 0x013B
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x002C, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #040
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00BC
	L2 Cache Handle: 0x013C
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x002D, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #041
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00BD
	L2 Cache Handle: 0x013D
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x002E, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #042
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00BE
	L2 Cache Handle: 0x013E
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x002F, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #043
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00BF
	L2 Cache Handle: 0x013F
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0030, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #044
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00C0
	L2 Cache Handle: 0x0140
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0031, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #045
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00C1
	L2 Cache Handle: 0x0141
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0032, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #046
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00C2
	L2 Cache Handle: 0x0142
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0033, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #047
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00C3
	L2 Cache Handle: 0x0143
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0034, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #048
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00C4
	L2 Cache Handle: 0x0144
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0035, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #049
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00C5
	L2 Cache Handle: 0x0145
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0036, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #050
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00C6
	L2 Cache Handle: 0x0146
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0037, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #051
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00C7
	L2 Cache Handle: 0x0147
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0038, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #052
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00C8
	L2 Cache Handle: 0x0148
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0039, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #053
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00C9
	L2 Cache Handle: 0x0149
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x003A, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #054
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00CA
	L2 Cache Handle: 0x014A
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x003B, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #055
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00CB
	L2 Cache Handle: 0x014B
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x003C, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #056
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00CC
	L2 Cache Handle: 0x014C
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x003D, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #057
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00CD
	L2 Cache Handle: 0x014D
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x003E, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #058
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00CE
	L2 Cache Handle: 0x014E
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x003F, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #059
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00CF
	L2 Cache Handle: 0x014F
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0040, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #060
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00D0
	L2 Cache Handle: 0x0150
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0041, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #061
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00D1
	L2 Cache Handle: 0x0151
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0042, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #062
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00D2
	L2 Cache Handle: 0x0152
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0043, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #063
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00D3
	L2 Cache Handle: 0x0153
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0044, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #064
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00D4
	L2 Cache Handle: 0x0154
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0045, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #065
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00D5
	L2 Cache Handle: 0x0155
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0046, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #066
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00D6
	L2 Cache Handle: 0x0156
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0047, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #067
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00D7
	L2 Cache Handle: 0x0157
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0048, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #068
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00D8
	L2 Cache Handle: 0x0158
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0049, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #069
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00D9
	L2 Cache Handle: 0x0159
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x004A, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #070
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00DA
	L2 Cache Handle: 0x015A
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x004B, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #071
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00DB
	L2 Cache Handle: 0x015B
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x004C, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #072
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00DC
	L2 Cache Handle: 0x015C
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x004D, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #073
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00DD
	L2 Cache Handle: 0x015D
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x004E, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #074
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00DE
	L2 Cache Handle: 0x015E
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x004F, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #075
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00DF
	L2 Cache Handle: 0x015F
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0050, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #076
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00E0
	L2 Cache Handle: 0x0160
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0051, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #077
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00E1
	L2 Cache Handle: 0x0161
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0052, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #078
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00E2
	L2 Cache Handle: 0x0162
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0053, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #079
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00E3
	L2 Cache Handle: 0x0163
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0054, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #080
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00E4
	L2 Cache Handle: 0x0164
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0055, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #081
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00E5
	L2 Cache Handle: 0x0165
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0056, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #082
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00E6
	L2 Cache Handle: 0x0166
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0057, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #083
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00E7
	L2 Cache Handle: 0x0167
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0058, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #084
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00E8
	L2 Cache Handle: 0x0168
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0059, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #085
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00E9
	L2 Cache Handle: 0x0169
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x005A, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #086
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00EA
	L2 Cache Handle: 0x016A
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x005B, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #087
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00EB
	L2 Cache Handle: 0x016B
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x005C, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #088
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00EC
	L2 Cache Handle: 0x016C
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x005D, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #089
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00ED
	L2 Cache Handle: 0x016D
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x005E, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #090
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00EE
	L2 Cache Handle: 0x016E
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x005F, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #091
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00EF
	L2 Cache Handle: 0x016F
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0060, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #092
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00F0
	L2 Cache Handle: 0x0170
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0061, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #093
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00F1
	L2 Cache Handle: 0x0171
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0062, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #094
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00F2
	L2 Cache Handle: 0x0172
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0063, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #095
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00F3
	L2 Cache Handle: 0x0173
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0064, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #096
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00F4
	L2 Cache Handle: 0x0174
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0065, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #097
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00F5
	L2 Cache Handle: 0x0175
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0066, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #098
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00F6
	L2 Cache Handle: 0x0176
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0067, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #099
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00F7
	L2 Cache Handle: 0x0177
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0068, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #100
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00F8
	L2 Cache Handle: 0x0178
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0069, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #101
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00F9
	L2 Cache Handle: 0x0179
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x006A, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #102
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00FA
	L2 Cache Handle: 0x017A
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x006B, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #103
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00FB
	L2 Cache Handle: 0x017B
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x006C, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #104
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00FC
	L2 Cache Handle: 0x017C
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x006D, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #105
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00FD
	L2 Cache Handle: 0x017D
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x006E, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #106
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00FE
	L2 Cache Handle: 0x017E
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x006F, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #107
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x00FF
	L2 Cache Handle: 0x017F
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0070, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #108
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0100
	L2 Cache Handle: 0x0180
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0071, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #109
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0101
	L2 Cache Handle: 0x0181
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0072, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #110
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0102
	L2 Cache Handle: 0x0182
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0073, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #111
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0103
	L2 Cache Handle: 0x0183
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0074, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #112
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0104
	L2 Cache Handle: 0x0184
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0075, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #113
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0105
	L2 Cache Handle: 0x0185
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0076, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #114
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0106
	L2 Cache Handle: 0x0186
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0077, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #115
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0107
	L2 Cache Handle: 0x0187
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0078, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #116
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0108
	L2 Cache Handle: 0x0188
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0079, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #117
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0109
	L2 Cache Handle: 0x0189
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x007A, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #118
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x010A
	L2 Cache Handle: 0x018A
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x007B, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #119
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x010B
	L2 Cache Handle: 0x018B
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x007C, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #120
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x010C
	L2 Cache Handle: 0x018C
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x007D, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #121
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x010D
	L2 Cache Handle: 0x018D
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x007E, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #122
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x010E
	L2 Cache Handle: 0x018E
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x007F, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #123
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x010F
	L2 Cache Handle: 0x018F
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0080, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #124
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0110
	L2 Cache Handle: 0x0190
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0081, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #125
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0111
	L2 Cache Handle: 0x0191
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0082, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #126
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0112
	L2 Cache Handle: 0x0192
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0083, DMI type 4, 42 bytes
Processor Information
	Socket Designation: CPU #127
	Type: Central Processor
	Family: Unknown
	Manufacturer: GenuineIntel
	ID: EA 06 00 00 FF FB 8B 0F
	Version: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
	Voltage: 3.3 V
	External Clock: Unknown
	Max Speed: 30000 MHz
	Current Speed: 2200 MHz
	Status: Populated, Disabled By BIOS
	Upgrade: ZIF Socket
	L1 Cache Handle: 0x0113
	L2 Cache Handle: 0x0193
	L3 Cache Handle: Not Provided
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Core Count: 1
	Core Enabled: 1
	Characteristics:
		64-bit capable
		Execute Protection

Handle 0x0084, DMI type 5, 46 bytes
Memory Controller Information
	Error Detecting Method: None
	Error Correcting Capabilities:
		None
	Supported Interleave: One-way Interleave
	Current Interleave: One-way Interleave
	Maximum Memory Module Size: 32768 MB
	Maximum Total Memory Size: 491520 MB
	Supported Speeds:
		70 ns
		60 ns
	Supported Memory Types:
		FPM
		EDO
		DIMM
		SDRAM
	Memory Module Voltage: 3.3 V
	Associated Memory Slots: 15
		0x0006
		0x0007
		0x0008
		0x0009
		0x000A
		0x000B
		0x000C
		0x000D
		0x000E
		0x000F
		0x0010
		0x0011
		0x0012
		0x0013
		0x0014
	Enabled Error Correcting Capabilities:
		None

Handle 0x0085, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #0
	Bank Connections: None
	Current Speed: Unknown
	Type: EDO DIMM
	Installed Size: 4096 MB (Single-bank Connection)
	Enabled Size: 4096 MB (Single-bank Connection)
	Error Status: OK

Handle 0x0086, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #1
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x0087, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #2
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x0088, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #3
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x0089, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #4
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x008A, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #5
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x008B, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #6
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x008C, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #7
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x008D, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #8
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x008E, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #9
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x008F, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #10
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x0090, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #11
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x0091, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #12
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x0092, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #13
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x0093, DMI type 6, 12 bytes
Memory Module Information
	Socket Designation: RAM socket #14
	Bank Connections: None
	Current Speed: Unknown
	Type: DIMM
	Installed Size: Not Installed
	Enabled Size: Not Installed
	Error Status: OK

Handle 0x0094, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0095, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0096, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0097, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0098, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0099, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x009A, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x009B, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x009C, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x009D, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x009E, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x009F, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00A0, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00A1, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00A2, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00A3, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00A4, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00A5, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00A6, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00A7, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00A8, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00A9, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00AA, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00AB, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00AC, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00AD, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00AE, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00AF, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00B0, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00B1, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00B2, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00B3, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00B4, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00B5, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00B6, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00B7, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00B8, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00B9, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00BA, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00BB, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00BC, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00BD, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00BE, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00BF, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00C0, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00C1, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00C2, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00C3, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00C4, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00C5, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00C6, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00C7, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00C8, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00C9, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00CA, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00CB, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00CC, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00CD, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00CE, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00CF, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00D0, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00D1, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00D2, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00D3, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00D4, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00D5, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00D6, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00D7, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00D8, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00D9, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00DA, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00DB, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00DC, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00DD, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00DE, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00DF, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00E0, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00E1, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00E2, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00E3, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00E4, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00E5, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00E6, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00E7, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00E8, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00E9, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00EA, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00EB, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00EC, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00ED, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00EE, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00EF, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00F0, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00F1, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00F2, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00F3, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00F4, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00F5, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00F6, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00F7, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00F8, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00F9, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00FA, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00FB, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00FC, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00FD, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00FE, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x00FF, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0100, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0101, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0102, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0103, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0104, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0105, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0106, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0107, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0108, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0109, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x010A, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x010B, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x010C, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x010D, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x010E, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x010F, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0110, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0111, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0112, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0113, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L1
	Configuration: Enabled, Socketed, Level 1
	Operational Mode: Write Back
	Location: Internal
	Installed Size: 16 kB
	Maximum Size: 16 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Asynchronous
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0114, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0115, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0116, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0117, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0118, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0119, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x011A, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x011B, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x011C, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x011D, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x011E, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x011F, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0120, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0121, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0122, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0123, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0124, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0125, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0126, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0127, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0128, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0129, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x012A, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x012B, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x012C, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x012D, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x012E, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x012F, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0130, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0131, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0132, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0133, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0134, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0135, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0136, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0137, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0138, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0139, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x013A, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x013B, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x013C, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x013D, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x013E, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x013F, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0140, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0141, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0142, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0143, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0144, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0145, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0146, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0147, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0148, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0149, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x014A, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x014B, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x014C, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x014D, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x014E, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x014F, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0150, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0151, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0152, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0153, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0154, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0155, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0156, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0157, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0158, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0159, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x015A, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x015B, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x015C, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x015D, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x015E, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x015F, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0160, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0161, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0162, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0163, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0164, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0165, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0166, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0167, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0168, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0169, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x016A, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x016B, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x016C, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x016D, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x016E, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x016F, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0170, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0171, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0172, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0173, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0174, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0175, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0176, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0177, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0178, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0179, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x017A, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x017B, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x017C, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x017D, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x017E, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x017F, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0180, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0181, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0182, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0183, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0184, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0185, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0186, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0187, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0188, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0189, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x018A, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x018B, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x018C, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x018D, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x018E, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x018F, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0190, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0191, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0192, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0193, DMI type 7, 19 bytes
Cache Information
	Socket Designation: L2
	Configuration: Enabled, Socketed, Level 2
	Operational Mode: Write Back
	Location: External
	Installed Size: 0 kB
	Maximum Size: 24576 kB
	Supported SRAM Types:
		Burst
		Pipeline Burst
		Asynchronous
	Installed SRAM Type: Burst
	Speed: Unknown
	Error Correction Type: Unknown
	System Type: Unknown
	Associativity: Unknown

Handle 0x0194, DMI type 8, 9 bytes
Port Connector Information
	Internal Reference Designator: J19
	Internal Connector Type: 9 Pin Dual Inline (pin 10 cut)
	External Reference Designator: COM 1
	External Connector Type: DB-9 male
	Port Type: Serial Port 16550A Compatible

Handle 0x0195, DMI type 8, 9 bytes
Port Connector Information
	Internal Reference Designator: J23
	Internal Connector Type: 25 Pin Dual Inline (pin 26 cut)
	External Reference Designator: Parallel
	External Connector Type: DB-25 female
	Port Type: Parallel Port ECP/EPP

Handle 0x0196, DMI type 8, 9 bytes
Port Connector Information
	Internal Reference Designator: J11
	Internal Connector Type: None
	External Reference Designator: Keyboard
	External Connector Type: Circular DIN-8 male
	Port Type: Keyboard Port

Handle 0x0197, DMI type 8, 9 bytes
Port Connector Information
	Internal Reference Designator: J12
	Internal Connector Type: None
	External Reference Designator: PS/2 Mouse
	External Connector Type: Circular DIN-8 male
	Port Type: Keyboard Port

Handle 0x0198, DMI type 9, 17 bytes
System Slot Information
	Designation: ISA Slot J8
	Type: 16-bit ISA
	Current Usage: Unknown
	Length: Short
	Characteristics:
		5.0 V is provided
	Bus Address: 00ff:ff:1f.7

Handle 0x0199, DMI type 9, 17 bytes
System Slot Information
	Designation: ISA Slot J9
	Type: 16-bit ISA
	Current Usage: Unknown
	Length: Short
	Characteristics:
		5.0 V is provided
	Bus Address: 00ff:ff:1f.7

Handle 0x019A, DMI type 9, 17 bytes
System Slot Information
	Designation: ISA Slot J10
	Type: 16-bit ISA
	Current Usage: Unknown
	Length: Short
	Characteristics:
		5.0 V is provided
	Bus Address: 00ff:ff:1f.7

Handle 0x019B, DMI type 9, 17 bytes
System Slot Information
	Designation: PCI Slot J11
	Type: 32-bit PCI
	Current Usage: In Use
	Length: Long
	ID: 1
	Characteristics:
		5.0 V is provided
		3.3 V is provided
	Bus Address: 0000:00:0f.0

Handle 0x019C, DMI type 9, 17 bytes
System Slot Information
	Designation: PCI Slot J12
	Type: 32-bit PCI
	Current Usage: In Use
	Length: Long
	ID: 2
	Characteristics:
		5.0 V is provided
		3.3 V is provided
	Bus Address: 0000:00:10.0

Handle 0x019D, DMI type 9, 17 bytes
System Slot Information
	Designation: PCI Slot J13
	Type: 32-bit PCI
	Current Usage: In Use
	Length: Long
	ID: 3
	Characteristics:
		5.0 V is provided
		3.3 V is provided
	Bus Address: 0000:00:11.0

Handle 0x019E, DMI type 9, 17 bytes
System Slot Information
	Designation: PCI Slot J14
	Type: 32-bit PCI
	Current Usage: Available
	Length: Long
	ID: 4
	Characteristics:
		5.0 V is provided
		3.3 V is provided
	Bus Address: 0000:00:12.0

Handle 0x019F, DMI type 10, 8 bytes
On Board Device 1 Information
	Type: Video
	Status: Disabled
	Description: VMware SVGA II
On Board Device 2 Information
	Type: Sound
	Status: Disabled
	Description: ES1371

Handle 0x01A0, DMI type 11, 5 bytes
OEM Strings
	String 1: [MS_VM_CERT/SHA1/27d66596a61c48dd3dc7216fd715126e33f59ae7]
	String 2: Welcome to the Virtual Machine

Handle 0x01A1, DMI type 15, 29 bytes
System Event Log
	Area Length: 16 bytes
	Header Start Offset: 0x0000
	Header Length: 16 bytes
	Data Start Offset: 0x0010
	Access Method: General-purpose non-volatile data functions
	Access Address: 0x0000
	Status: Invalid, Full
	Change Token: 0x00000036
	Header Format: Type 1
	Supported Log Type Descriptors: 3
	Descriptor 1: POST error
	Data Format 1: POST results bitmap
	Descriptor 2: Single-bit ECC memory error
	Data Format 2: Multiple-event
	Descriptor 3: Multi-bit ECC memory error
	Data Format 3: Multiple-event

Handle 0x01A2, DMI type 16, 23 bytes
Physical Memory Array
	Location: System Board Or Motherboard
	Use: System Memory
	Error Correction Type: None
	Maximum Capacity: 65 GB
	Error Information Handle: Not Provided
	Number Of Devices: 64

Handle 0x01A3, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: 4096 MB
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #0
	Bank Locator: RAM slot #0
	Type: DRAM
	Type Detail: EDO
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01A4, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #1
	Bank Locator: RAM slot #1
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01A5, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #2
	Bank Locator: RAM slot #2
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01A6, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #3
	Bank Locator: RAM slot #3
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01A7, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #4
	Bank Locator: RAM slot #4
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01A8, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #5
	Bank Locator: RAM slot #5
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01A9, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #6
	Bank Locator: RAM slot #6
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01AA, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #7
	Bank Locator: RAM slot #7
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01AB, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #8
	Bank Locator: RAM slot #8
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01AC, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #9
	Bank Locator: RAM slot #9
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01AD, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #10
	Bank Locator: RAM slot #10
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01AE, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #11
	Bank Locator: RAM slot #11
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01AF, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #12
	Bank Locator: RAM slot #12
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01B0, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #13
	Bank Locator: RAM slot #13
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01B1, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #14
	Bank Locator: RAM slot #14
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01B2, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #15
	Bank Locator: RAM slot #15
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01B3, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #16
	Bank Locator: RAM slot #16
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01B4, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #17
	Bank Locator: RAM slot #17
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01B5, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #18
	Bank Locator: RAM slot #18
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01B6, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #19
	Bank Locator: RAM slot #19
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01B7, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #20
	Bank Locator: RAM slot #20
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01B8, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #21
	Bank Locator: RAM slot #21
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01B9, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #22
	Bank Locator: RAM slot #22
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01BA, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #23
	Bank Locator: RAM slot #23
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01BB, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #24
	Bank Locator: RAM slot #24
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01BC, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #25
	Bank Locator: RAM slot #25
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01BD, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #26
	Bank Locator: RAM slot #26
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01BE, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #27
	Bank Locator: RAM slot #27
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01BF, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #28
	Bank Locator: RAM slot #28
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01C0, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #29
	Bank Locator: RAM slot #29
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01C1, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #30
	Bank Locator: RAM slot #30
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01C2, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #31
	Bank Locator: RAM slot #31
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01C3, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #32
	Bank Locator: RAM slot #32
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01C4, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #33
	Bank Locator: RAM slot #33
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01C5, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #34
	Bank Locator: RAM slot #34
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01C6, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #35
	Bank Locator: RAM slot #35
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01C7, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #36
	Bank Locator: RAM slot #36
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01C8, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #37
	Bank Locator: RAM slot #37
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01C9, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #38
	Bank Locator: RAM slot #38
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01CA, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #39
	Bank Locator: RAM slot #39
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01CB, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #40
	Bank Locator: RAM slot #40
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01CC, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #41
	Bank Locator: RAM slot #41
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01CD, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #42
	Bank Locator: RAM slot #42
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01CE, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #43
	Bank Locator: RAM slot #43
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01CF, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #44
	Bank Locator: RAM slot #44
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01D0, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #45
	Bank Locator: RAM slot #45
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01D1, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #46
	Bank Locator: RAM slot #46
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01D2, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #47
	Bank Locator: RAM slot #47
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01D3, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #48
	Bank Locator: RAM slot #48
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01D4, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #49
	Bank Locator: RAM slot #49
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01D5, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #50
	Bank Locator: RAM slot #50
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01D6, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #51
	Bank Locator: RAM slot #51
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01D7, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #52
	Bank Locator: RAM slot #52
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01D8, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #53
	Bank Locator: RAM slot #53
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01D9, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #54
	Bank Locator: RAM slot #54
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01DA, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #55
	Bank Locator: RAM slot #55
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01DB, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #56
	Bank Locator: RAM slot #56
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01DC, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #57
	Bank Locator: RAM slot #57
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01DD, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #58
	Bank Locator: RAM slot #58
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01DE, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #59
	Bank Locator: RAM slot #59
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01DF, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #60
	Bank Locator: RAM slot #60
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01E0, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #61
	Bank Locator: RAM slot #61
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01E1, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #62
	Bank Locator: RAM slot #62
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01E2, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: Unknown
	Data Width: Unknown
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: RAM slot #63
	Bank Locator: RAM slot #63
	Type: DRAM
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01E3, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #0
	Bank Locator: NVD #0
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01E4, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #1
	Bank Locator: NVD #1
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01E5, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #2
	Bank Locator: NVD #2
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01E6, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #3
	Bank Locator: NVD #3
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01E7, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #4
	Bank Locator: NVD #4
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01E8, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #5
	Bank Locator: NVD #5
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01E9, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #6
	Bank Locator: NVD #6
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01EA, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #7
	Bank Locator: NVD #7
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01EB, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #8
	Bank Locator: NVD #8
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01EC, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #9
	Bank Locator: NVD #9
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01ED, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #10
	Bank Locator: NVD #10
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01EE, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #11
	Bank Locator: NVD #11
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01EF, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #12
	Bank Locator: NVD #12
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01F0, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #13
	Bank Locator: NVD #13
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01F1, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #14
	Bank Locator: NVD #14
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01F2, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #15
	Bank Locator: NVD #15
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01F3, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #16
	Bank Locator: NVD #16
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01F4, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #17
	Bank Locator: NVD #17
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01F5, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #18
	Bank Locator: NVD #18
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01F6, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #19
	Bank Locator: NVD #19
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01F7, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #20
	Bank Locator: NVD #20
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01F8, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #21
	Bank Locator: NVD #21
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01F9, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #22
	Bank Locator: NVD #22
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01FA, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #23
	Bank Locator: NVD #23
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01FB, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #24
	Bank Locator: NVD #24
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01FC, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #25
	Bank Locator: NVD #25
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01FD, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #26
	Bank Locator: NVD #26
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01FE, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #27
	Bank Locator: NVD #27
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x01FF, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #28
	Bank Locator: NVD #28
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0200, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #29
	Bank Locator: NVD #29
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0201, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #30
	Bank Locator: NVD #30
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0202, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #31
	Bank Locator: NVD #31
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0203, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #32
	Bank Locator: NVD #32
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0204, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #33
	Bank Locator: NVD #33
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0205, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #34
	Bank Locator: NVD #34
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0206, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #35
	Bank Locator: NVD #35
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0207, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #36
	Bank Locator: NVD #36
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0208, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #37
	Bank Locator: NVD #37
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0209, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #38
	Bank Locator: NVD #38
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x020A, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #39
	Bank Locator: NVD #39
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x020B, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #40
	Bank Locator: NVD #40
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x020C, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #41
	Bank Locator: NVD #41
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x020D, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #42
	Bank Locator: NVD #42
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x020E, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #43
	Bank Locator: NVD #43
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x020F, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #44
	Bank Locator: NVD #44
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0210, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #45
	Bank Locator: NVD #45
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0211, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #46
	Bank Locator: NVD #46
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0212, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #47
	Bank Locator: NVD #47
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0213, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #48
	Bank Locator: NVD #48
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0214, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #49
	Bank Locator: NVD #49
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0215, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #50
	Bank Locator: NVD #50
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0216, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #51
	Bank Locator: NVD #51
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0217, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #52
	Bank Locator: NVD #52
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0218, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #53
	Bank Locator: NVD #53
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0219, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #54
	Bank Locator: NVD #54
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x021A, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #55
	Bank Locator: NVD #55
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x021B, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #56
	Bank Locator: NVD #56
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x021C, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #57
	Bank Locator: NVD #57
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x021D, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #58
	Bank Locator: NVD #58
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x021E, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #59
	Bank Locator: NVD #59
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x021F, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #60
	Bank Locator: NVD #60
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0220, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #61
	Bank Locator: NVD #61
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0221, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #62
	Bank Locator: NVD #62
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0222, DMI type 17, 34 bytes
Memory Device
	Array Handle: 0x0025
	Error Information Handle: No Error
	Total Width: 32 bits
	Data Width: 32 bits
	Size: No Module Installed
	Form Factor: DIMM
	Set: None
	Locator: NVD #63
	Bank Locator: NVD #63
	Type: Other
	Type Detail: Unknown
	Speed: Unknown
	Manufacturer: Not Specified
	Serial Number: Not Specified
	Asset Tag: Not Specified
	Part Number: Not Specified
	Rank: Unknown
	Configured Memory Speed: Unknown

Handle 0x0223, DMI type 18, 23 bytes
32-bit Memory Error Information
	Type: OK
	Granularity: Unknown
	Operation: Unknown
	Vendor Syndrome: Unknown
	Memory Array Address: Unknown
	Device Address: Unknown
	Resolution: Unknown

Handle 0x0224, DMI type 19, 31 bytes
Memory Array Mapped Address
	Starting Address: 0x00000000000
	Ending Address: 0x000FFFFFFFF
	Range Size: 4 GB
	Physical Array Handle: 0x0025
	Partition Width: 64

Handle 0x0225, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0026
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0226, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0027
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0227, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0028
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0228, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0029
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0229, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x002A
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x022A, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x002B
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x022B, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x002C
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x022C, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x002D
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x022D, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x002E
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x022E, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x002F
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x022F, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0030
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0230, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0031
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0231, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0032
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0232, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0033
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0233, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0034
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0234, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0035
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0235, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0036
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0236, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0037
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0237, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0038
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0238, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0039
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0239, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x003A
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x023A, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x003B
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x023B, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x003C
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x023C, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x003D
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x023D, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x003E
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x023E, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x003F
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x023F, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0040
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0240, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0041
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0241, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0042
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0242, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0043
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0243, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0044
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0244, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0045
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0245, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0046
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0246, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0047
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0247, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0048
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0248, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0049
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0249, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x004A
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x024A, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x004B
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x024B, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x004C
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x024C, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x004D
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x024D, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x004E
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x024E, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x004F
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x024F, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0050
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0250, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0051
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0251, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0052
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0252, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0053
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0253, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0054
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0254, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0055
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0255, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0056
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0256, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0057
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0257, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0058
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0258, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0059
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0259, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x005A
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x025A, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x005B
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x025B, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x005C
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x025C, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x005D
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x025D, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x005E
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x025E, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x005F
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x025F, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0060
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0260, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0061
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0261, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0062
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0262, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0063
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0263, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0064
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0264, DMI type 20, 35 bytes
Memory Device Mapped Address
	Starting Address: 0x00100000000
	Ending Address: 0x010BFEFFFFF
	Range Size: 64511 MB
	Physical Device Handle: 0x0065
	Memory Array Mapped Address Handle: 0x00A7
	Partition Row Position: Unknown
	Interleave Position: Unknown
	Interleaved Data Depth: Unknown

Handle 0x0265, DMI type 23, 13 bytes
System Reset
	Status: Enabled
	Watchdog Timer: Present
	Boot Option: Do Not Reboot
	Boot Option On Limit: Do Not Reboot
	Reset Count: Unknown
	Reset Limit: Unknown
	Timer Interval: Unknown
	Timeout: Unknown

Handle 0x0266, DMI type 24, 5 bytes
Hardware Security
	Power-On Password Status: Disabled
	Keyboard Password Status: Unknown
	Administrator Password Status: Enabled
	Front Panel Reset Status: Unknown

Handle 0x0267, DMI type 30, 6 bytes
Out-of-band Remote Access
	Manufacturer Name: Intel
	Inbound Connection: Enabled
	Outbound Connection: Disabled

Handle 0x0268, DMI type 32, 20 bytes
System Boot Information
	Status: No errors detected

Handle 0x0269, DMI type 33, 31 bytes
64-bit Memory Error Information
	Type: OK
	Granularity: Unknown
	Operation: Unknown
	Vendor Syndrome: Unknown
	Memory Array Address: Unknown
	Device Address: Unknown
	Resolution: Unknown

Handle 0x026A, DMI type 126, 4 bytes
Inactive

Handle 0x026B, DMI type 127, 4 bytes
End Of Table

